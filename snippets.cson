'.source.js':
  'Create simple component':
    'prefix': 'comp'
    'body': """
import React, { Component } from 'react';

export default class $1 extends Component {
	render () {
		return (
			$2
		);
	}
}
    """
  'Create provider connector and function':
    'prefix': 'conn'
    'body': """
import { connect } from 'react-redux';

/**
* Convert application state to props.
* @param {Object} state - Application state
* @returns {Object} Updated props
*/
const mapStateToProps = (state) => {
  return { $2: state.$2 };
};

export default connect(mapStateToProps)($1);
    """
   'Create High Order Component':
    'prefix': 'hoc'
    'body': """
import React, { Component } from 'react';
import { connect } from 'react-redux';

class $1 extends Component {
  render() {
    return();
  }

}

function mapStateToProps(state) {
  return {
    $2: state.$2
  };
}

export default connect(mapStateToProps, null)($1);
   """
   'Create Action':
    'prefix': 'action'
    'body': """
import { $2 } from './types';

export const $1 = (locale) => {
  return {
    data: {$3},
    type: $2
  };
};
    """
   'Action thunk':
    'prefix': 'thunk'
    'body': """
import { $2 } from './types';

export const $1 = (locale) => {
  return (dispatch) => {
    dispatch({
      data: {$3},
      type: $2
    });
  };
};
    """
   'Create Reducer':
    'prefix': 'reducer'
    'body': """
import { $1 } from '../actions/types';

const defaultState = {};

/**
* @param {Object} state - Default aplication state
* @param {Object} action - Action from action creator
* @returns {Object} New state
*/
export default function reducer (state = defaultState, action) {
    switch (action.type) {
      case $1: {
        return {
          ...state,
          ...action.data
        };
      }
      default: {
        return { ...state };
      }
    }
}
    """
   'get var':
    'prefix': 'impvar'
    'body': """
import { $1 } from '$2';
    """
   'Import':
    'prefix': 'imp'
    'body': """
import $1 from '$1';
    """
   'Test Component':
    'prefix': 'test'
    'body': """
import React from 'react';
import { mount } from 'enzyme';
import $1 from '$1';

/* eslint no-undef: "off" */
describe('$1', () => {
    it('$2', () => {
      const wrapper = mount(<$1 />);

      expect(true).toBe(true);
    });

});
    """
