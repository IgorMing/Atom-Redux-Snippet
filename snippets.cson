'.source.js':
  'Create simple component':
    'prefix': 'comp'
    'body': """
import React, { Component } from 'react';

export default class $1 extends Component {
	render() {
		return(
			$2
		);
	}
}
    """
  'Create provider connector and function':
    'prefix': 'conn'
    'body': """
function mapStateToProps(state) {
  return {
    $2: state.$2
  };
}

export default connect(mapStateToProps)($1);
    """
   'Create High Order Component':
    'prefix': 'hoc'
    'body': """
import React, { Component } from 'react';
import { connect } from 'react-redux';

class $1 extends Component {
  render() {
    return();
  }

}

function mapStateToProps(state) {
  return {
    $2: state.$2
  };
}

export default connect(mapStateToProps, null)($1);
   """
   'Create Action':
    'prefix': 'action'
    'body': """
import { $2 } from './types';

export const $1 = (locale) => {
  return {
    data: {$3},
    type: $2
  };
};
    """
   'Action thunk':
    'prefix': 'thunk'
    'body': """
import { $2 } from './types';

export const $1 = (locale) => {
  return (dispatch) => {
    dispatch({
      data: {$3},
      type: $2
    });
  };
};
    """
   'Create Reducer':
    'prefix': 'reducer'
    'body': """
import { $1 } from '../actions/types';

const defaultState = {};

/**
* @param {Object} state - Default aplication state
* @param {Object} action - Action from action creator
* @returns {Object} New state
*/
export default function reducer (state = defaultState, action) {
    switch (action.type) {
      case $1: {
        return {
          ...state,
          ...action.data
        };
      }
      default: {
        return { ...state };
      }
    }
}
    """
   'get var':
    'prefix': 'impvar'
    'body': """
import { $1 } from '$2';
    """
   'Import':
    'prefix': 'imp'
    'body': """
import $1 from '$1';
    """
   'Test Component':
    'prefix': 'testcomp'
    'body': """
import { renderComponent, expect } from '../test_helper';
import $1 from '../../src/components/$2';

describe('$1', () => {

    it('my test description', () => {
      const component = renderComponent($1)
      expect(component).to.contain('my comment');
    });

});
    """
   'Test Component':
    'prefix': 'testcomp'
    'body': """
import { renderComponent, expect } from '../test_helper';
import $1 from '../../src/components/$2';

describe('$1', () => {

    it('my test description', () => {
      const component = renderComponent($1)
      expect(component).to.contain('my comment');
    });

});
    """
   'Test Action':
    'prefix': 'testaction'
    'body': """
import { expect } from '../test_helper';

describe('Actions', () => {

  describe('My describe', () => {

    it('Has the correct type', () => {
      $1
    });

    it('Has the correct data', () => {

    });

  });
});
    """
'Test Action':
 'prefix': 'testaction'
 'body': """
describe('Actions', () => {

describe('My describe', () => {

 it('Has the correct type', () => {
   $1
 });

 it('Has the correct data', () => {

 });

});
});
 """
